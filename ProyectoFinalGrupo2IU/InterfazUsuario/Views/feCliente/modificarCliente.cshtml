@model InterfazUsuario.Models.ModeloCliente

@{
    ViewBag.Title = "Modificar Cliente";
}

<h2>Modificar Cliente</h2>


@using (Html.BeginForm("accionesEjecucion", "feCliente", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ModeloCliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group d-none">
            @Html.LabelFor(model => model.TN_IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 d-none">
                @Html.EditorFor(model => model.TN_IdCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TN_IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_Ap1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_Ap1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_Ap1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_Ap2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_Ap2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_Ap2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tc_NumTelefonico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tc_NumTelefonico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tc_NumTelefonico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TC_CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TC_CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TC_CorreoElectronico, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" name="accionEjecutar" value="Modificar"
                        class="btn btn-warning" title="Modifica Cliente"
                        data-toggle="tooltip" data-container="body" data-placement="right">
                    Modificar
                </button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "obtenerCliente")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
